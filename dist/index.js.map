{
  "version": 3,
  "sources": ["../lib/abbreviations.json", "../lib/emojis.json", "../lib/contractions.json", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["{\n    \"i.e.\": [\"i.e.\"],\n    \"I.e.\": [\"I.e.\"],\n    \"I.E.\": [\"I.E.\"],\n    \"e.g.\": [\"e.g.\"],\n    \"E.g.\": [\"E.g.\"],\n    \"E.G.\": [\"E.G.\"],\n    \"et al.\": [\"et al.\"],\n    \"etc.\": [\"etc.\"],\n    \"vs.\": [\"vs.\"],\n    \"A.S.A.P\": [\"A.S.A.P\"],\n    \"E.T.A.\": [\"E.T.A.\"],\n    \"D.I.Y\": [\"D.I.Y\"],\n    \"R.S.V.P\": [\"R.S.V.P\"],\n    \"P.S.\": [\"P.S.\"],\n    \"B.Y.O.B\": [\"B.Y.O.B\"],\n    \"Ms.\": [\"Ms.\"],\n    \"Mr.\": [\"Mr.\"],\n    \"Dr.\": [\"Dr.\"],\n    \"Prof.\": [\"Prof.\"],\n    \"Mrs.\": [\"Mrs.\"],\n    \"Messrs.\": [\"Messrs.\"],\n    \"Gov.\": [\"Gov.\"],\n    \"Gen.\": [\"Gen.\"],\n    \"Lt.\": [\"Lt.\"],\n    \"Col.\":[\"Col.\"],\n    \"Mt.\": [\"Mt.\"],\n    \"Bros.\": [\"Bros.\"],\n    \"Corp.\": [\"Corp.\"],\n    \"Co.\": [\"Co.\"],\n    \"co.\": [\"co.\"],\n    \"Inc.\": [\"Inc.\"],\n    \"Ltd.\": [\"Ltd.\"],\n    \"Rep.\": [\"Rep.\"],\n    \"Sen.\": [\"Sen.\"],\n    \"Jr.\": [\"Jr.\"],\n    \"Sr.\": [\"Sr.\"],\n    \"Ph.D.\": [\"Ph.D.\"],\n    \"J.D.\": [\"J.D.\"],\n    \"M.D.\": [\"M.D.\"],\n    \"Rev.\": [\"Rev.\"],\n    \"Adm.\": [\"Adm.\"],\n    \"St.\": [\"St.\"],\n    \"a.m.\": [\"a.m.\"],\n    \"p.m.\": [\"p.m.\"],\n    \"b.c.\": [\"b.c.\"],\n    \"B.C.\": [\"B.C.\"],\n    \"a.d.\": [\"a.d.\"],\n    \"A.D.\": [\"A.D.\"],\n    \"b.c.e.\": [\"b.c.e.\"],\n    \"B.C.E.\": [\"B.C.E.\"],\n    \"Jan.\": [\"Jan.\"],\n    \"Feb.\": [\"Feb.\"],\n    \"Mar.\": [\"Mar.\"],\n    \"Apr.\": [\"Apr.\"],\n    \"May.\": [\"May.\"],\n    \"Jun.\": [\"Jun.\"],\n    \"Jul.\": [\"Jul.\"],\n    \"Aug.\": [\"Aug.\"],\n    \"Sep.\": [\"Sep.\"],\n    \"Sept.\": [\"Sept.\"],\n    \"Oct.\": [\"Oct.\"],\n    \"Nov.\": [\"Nov.\"],\n    \"Dec.\": [\"Dec.\"],\n    \"Ala.\": [\"Ala.\"],\n    \"Ariz.\": [\"Ariz.\"],\n    \"Ark.\": [ \"Ark.\"],\n    \"Calif.\": [\"Calif.\"],\n    \"Colo.\": [\"Colo.\"],\n    \"Conn.\": [\"Conn.\"],\n    \"Del.\": [ \"Del.\"],\n    \"D.C.\": [\"D.C.\"],\n    \"Fla.\": [ \"Fla.\"],\n    \"Ga.\": [\"Ga.\"],\n    \"Ill.\": [\"Ill.\"],\n    \"Ind.\": [\"Ind.\"],\n    \"Kans.\": [\"Kans.\"],\n    \"Kan.\": [\"Kan.\"],\n    \"Ky.\": [\"Ky.\"],\n    \"La.\": [\"La.\"],\n    \"Md.\": [\"Md.\"],\n    \"Mass.\": [\"Mass.\"],\n    \"Mich.\": [\"Mich.\"],\n    \"Minn.\": [\"Minn.\"],\n    \"Miss.\": [\"Miss.\"],\n    \"Mo.\": [\"Mo.\"],\n    \"Mont.\": [\"Mont.\"],\n    \"Nebr.\": [\"Nebr.\"],\n    \"Neb.\": [\"Neb.\"],\n    \"Nev.\": [ \"Nev.\"],\n    \"N.H.\": [\"N.H.\"],\n    \"N.J.\": [\"N.J.\"],\n    \"N.M.\": [\"N.M.\"],\n    \"N.Y.\": [\"N.Y.\"],\n    \"N.C.\": [\"N.C.\"],\n    \"N.D.\": [\"N.D.\"],\n    \"Okla.\": [\"Okla.\"],\n    \"Ore.\": [\"Ore.\"],\n    \"Pa.\": [\"Pa.\"],\n    \"Tenn.\": [\"Tenn.\"],\n    \"Va.\": [\"Va.\"],\n    \"Wash.\": [\"Wash.\"],\n    \"Wis.\": [\"Wis.\"]\n}\n", "{\n    \"^_^\": [\"^_^\"],\n    \"=D\": [\"=D\"],\n    \";-p\": [\";-p\"],\n    \":O\": [\":O\"],\n    \":-/\": [\":-/\"],\n    \"xD\": [\"xD\"],\n    \"V_V\": [\"V_V\"],\n    \";(\": [\";(\"],\n    \"(:\": [\"(:\"],\n    \"\\\")\": [\"\\\")\"],\n    \":Y\": [\":Y\"],\n    \":]\": [\":]\"],\n    \":3\": [\":3\"],\n    \":(\": [\":(\"],\n    \":-)\": [\":-)\"],\n    \"=3\": [\"=3\"],\n    \":))\": [\":))\"],\n    \":>\": [\":>\"],\n    \";p\": [\";p\"],\n    \":p\": [\":p\"],\n    \"=[[\": [\"=[[\"],\n    \"xDD\": [\"xDD\"],\n    \"<333\": [\"<333\"],\n    \"<33\": [\"<33\"],\n    \":P\": [\":P\"],\n    \"o.O\": [\"o.O\"],\n    \"<3\": [\"<3\"],\n    \";-)\": [\";-)\"],\n    \":)\": [\":)\"],\n    \"-_-\": [\"-_-\"],\n    \":')\": [\":')\"],\n    \"o_O\": [\"o_O\"],\n    \";)\": [\";)\"],\n    \"=]\": [\"=]\"],\n    \"(=\": [\"(=\"],\n    \"-__-\": [\"-__-\"],\n    \":/\": [\":/\"],\n    \":0\": [\":0\"],\n    \"(^_^)\": [\"(^_^)\"],\n    \";D\": [\";D\"],\n    \"o_o\": [\"o_o\"],\n    \":((\": [\":((\"],\n    \"=)\": [\"=)\"]\n}\n", "{\n    \"'s\": [\"'s\"],\n    \"'S\": [\"'S\"],\n    \"ain't\": [\"ai\", \"n't\"],\n    \"aint\": [\"ai\", \"nt\"],\n    \"Ain't\": [\"Ai\", \"n't\"],\n    \"aren't\": [\"are\", \"n't\"],\n    \"arent\": [\"are\", \"nt\"],\n    \"Aren't\": [\"Are\", \"n't\"],\n    \"can't\": [\"ca\", \"n't\"],\n    \"cant\": [\"ca\", \"nt\"],\n    \"Can't\": [\"Ca\", \"n't\"],\n    \"can't've\": [\"ca\", \"n't\", \"'ve\"],\n    \"'cause\": [\"'cause'\"],\n    \"cannot\": [\"can\", \"not\"],\n    \"Cannot\": [\"Can\", \"not\"],\n    \"could've\": [\"could\", \"'ve\"],\n    \"couldve\": [\"could\", \"ve\"],\n    \"Could've\": [\"Could\", \"'ve\"],\n    \"couldn't\": [\"could\", \"n't\"],\n    \"couldnt\": [\"could\", \"nt\"],\n    \"Couldn't\": [\"Could\", \"n't\"],\n    \"couldn't've\": [\"could\", \"n't\", \"'ve\"],\n    \"couldntve\": [\"could\", \"nt\", \"ve\"],\n    \"Couldn't've\": [\"Could\", \"n't\", \"'ve\"],\n    \"didn't\": [\"did\", \"n't\"],\n    \"didnt\": [\"did\", \"nt\"],\n    \"Didn't\": [\"Did\", \"n't\"],\n    \"doesn't\": [\"does\", \"n't\"],\n    \"doesnt\": [\"does\", \"nt\"],\n    \"Doesn't\": [\"Does\", \"n't\"],\n    \"don't\": [\"do\", \"n't\"],\n    \"dont\": [\"do\", \"nt\"],\n    \"Don't\": [\"Do\", \"n't\"],\n    \"hadn't\": [\"had\", \"n't\"],\n    \"hadnt\": [\"had\", \"nt\"],\n    \"Hadn't\": [\"Had\", \"n't\"],\n    \"hadn't've\": [\"had\", \"n't\", \"'ve\"],\n    \"hasn't\": [\"has\", \"n't\"],\n    \"hasnt\": [\"has\", \"nt\"],\n    \"haven't\": [\"have\", \"n't\"],\n    \"havent\": [\"have\", \"nt\"],\n    \"he'd\": [\"he\", \"'d\"],\n    \"hed\": [\"he\", \"d\"],\n    \"he'd've\": [\"he\", \"'d\", \"'ve\"],\n    \"hedve\": [\"he\", \"d\", \"ve\"],\n    \"he'll\": [\"he\", \"'ll\"],\n    \"he'll've\": [\"he\", \"'ll\", \"'ve\"],\n    \"he's\": [\"he\", \"'s\"],\n    \"hes\": [\"he\", \"s\"],\n    \"how'd\": [\"how\", \"'d\"],\n    \"howd\": [\"how\", \"d\"],\n    \"how'd'y\": [ \"how\", \"'d\", \"'y\" ],\n    \"how'll\": [\"how\", \"'ll\"],\n    \"howll\": [\"how\", \"ll\"],\n    \"how's\": [\"how\", \"'s\"],\n    \"hows\": [\"how\", \"s\"],\n    \"I'd\": [\"I\", \"'d\"],\n    \"I'd've\": [\"I\", \"'d\", \"'ve\"],\n    \"I'll\": [\"I\", \"'ll\"],\n    \"i'll\": [\"i\", \"'ll\"],\n    \"I'll've\": [\"I\", \"'ll\", \"'ve\"],\n    \"i'll've\": [\"i\", \"'ll\", \"'ve\"],\n    \"I'm\": [\"I\", \"'m\"],\n    \"i'm\": [\"i\", \"'m\"],\n    \"Im\": [\"I\", \"m\"],\n    \"im\": [\"i\", \"m\"],\n    \"I'ma\": [\"I\", \"'ma\"],\n    \"i'ma\": [\"i\", \"'ma\"],\n    \"I've\": [\"I\", \"'ve\"],\n    \"i've\": [\"i\", \"'ve\"],\n    \"isn't\": [\"is\", \"n't\"],\n    \"isnt\": [\"is\", \"nt\"],\n    \"Isn't\": [\"Is\", \"n't\"],\n    \"It'd\": [\"It\", \"'d\"],\n    \"it'd\": [\"it\", \"'d\"],\n    \"it'd've\": [\"it\", \"'d\", \"'ve\"],\n    \"it'll've\": [\"it\", \"'ll\", \"'ve\"],\n    \"it'll\": [\"it\", \"'ll\"],\n    \"itll\": [\"it\", \"ll\"],\n    \"it's\": [\"it\", \"'s\"],\n    \"let's\": [\"let\", \"'s\"],\n    \"lets\": [\"let\", \"s\"],\n    \"ma'am\": [\"ma'am\"],\n    \"mayn't\": [\"may\", \"n't\"],\n    \"mightn't\": [\"might\", \"n't\"],\n    \"mightn't've\": [\"might\", \"n't\", \"'ve\"],\n    \"might've\": [\"might\", \"'ve\"],\n    \"mustn't\": [\"must\", \"n't\"],\n    \"mustn't've\": [\"must\", \"n't\",\"'ve\"],\n    \"must've\": [\"must\", \"'ve\"],\n    \"needn't\": [\"need\", \"n't\"],\n    \"needn't've\": [\"need\", \"n't\", \"'ve\"],\n    \"not've\": [\"not\", \"'ve\"],\n    \"o'clock\": [\"o'clock\"],\n    \"oughtn't\": [\"ought\", \"n't\"],\n    \"oughtn't've\": [\"ought\", \"n't\", \"'ve\"],\n    \"so've\": [\"so\", \"'ve\"],\n    \"so's\": [\"so\", \"'s\"],\n    \"shan't\": [\"sha\", \"n't\"],\n    \"sha'n't\": [\"sha'\", \"n't\"],\n    \"shan't've\": [\"sha\", \"n't\", \"'ve\"],\n    \"she'd\": [\"she\", \"'d\"],\n    \"she'd've\": [\"she\", \"'d\", \"'ve\"],\n    \"she'll\": [\"she\", \"'ll\"],\n    \"she'll've\": [\"she\", \"'ll\", \"'ve\"],\n    \"she's\": [\"she\", \"'s\"],\n    \"should've\": [\"should\", \"'ve\"],\n    \"shouldn't\": [\"should\", \"n't\"],\n    \"shouldn't've\": [\"should\", \"n't\", \"'ve\"],\n    \"that'd\": [\"that\", \"'d\"],\n    \"that'd've\": [\"that\", \"'d\", \"'ve\"],\n    \"that's\": [\"that\", \"'s\"],\n    \"thats\": [\"that\", \"s\"],\n    \"there'd\": [\"there\", \"'d\"],\n    \"there'd've\": [\"there\", \"'d\", \"'ve\"],\n    \"there's\": [\"there\", \"'s\"],\n    \"they'd\": [\"they\", \"'d\"],\n    \"They'd\": [\"They\", \"'d\"],\n    \"they'd've\": [\"they\", \"'d\", \"'ve\"],\n    \"They'd've\": [\"They\", \"'d\", \"'ve\"],\n    \"they'll\": [\"they\", \"'ll\"],\n    \"They'll\": [\"They\", \"'ll\"],\n    \"they'll've\": [\"they\", \"'ll\", \"'ve\"],\n    \"They'll've\": [\"They\", \"'ll\", \"'ve\"],\n    \"they're\": [\"they\", \"'re\"],\n    \"They're\": [\"They\", \"'re\"],\n    \"they've\": [\"they\", \"'ve\"],\n    \"They've\": [\"They\", \"'ve\"],\n    \"to've\": [\"to\", \"'ve\"],\n    \"wasn't\": [\"was\", \"n't\"],\n    \"we'd\": [\"we\", \"'d\"],\n    \"We'd\": [\"We\", \"'d\"],\n    \"we'd've\": [\"we\", \"'d\", \"'ve\"],\n    \"we'll\": [\"we\", \"'ll\"],\n    \"We'll\": [\"We\", \"'ll\"],\n    \"we'll've\": [\"we\", \"'ll\", \"'ve\"],\n    \"We'll've\": [\"We\", \"'ll\", \"'ve\"],\n    \"we're\": [\"we\", \"'re\"],\n    \"We're\": [\"We\", \"'re\"],\n    \"we've\": [\"we\", \"'ve\"],\n    \"We've\": [\"We\", \"'ve\"],\n    \"weren't\": [\"were\", \"n't\"],\n    \"what'll\": [\"what\", \"'ll\"],\n    \"what'll've\": [\"what\", \"'ll\", \"'ve\"],\n    \"what're\": [\"what\", \"'re\"],\n    \"what's\": [\"what\", \"'s\"],\n    \"what've\": [\"what\", \"'ve\"],\n    \"when's\": [\"when\", \"'s\"],\n    \"when've\": [\"when\", \"'ve\"],\n    \"where'd\": [\"where\", \"'d\"],\n    \"where's\": [\"where\", \"'s\"],\n    \"where've\": [\"where\", \"'ve\"],\n    \"who'd\": [\"who\", \"'d\"],\n    \"who'll\": [\"who\", \"'ll\"],\n    \"who'll've\": [\"who\", \"'ll'\", \"'ve'\"],\n    \"who're\": [\"who\", \"'re\"],\n    \"who's\": [\"who\", \"'s\"],\n    \"who've\": [\"who\", \"'ve\"],\n    \"why've\": [\"why\", \"'ve\"],\n    \"why'll\": [\"why\", \"'ll\"],\n    \"why're\": [\"why\", \"'re\"],\n    \"why's\": [\"why\", \"'s\"],\n    \"will've\": [\"will\", \"'ve\"],\n    \"won't\": [\"wo\", \"n't\"],\n    \"wont\": [\"wo\", \"nt\"],\n    \"won't've\": [\"wo\", \"n't\", \"'ve\"],\n    \"would've\": [\"would\", \"'ve\"],\n    \"wouldn't\": [\"would\", \"n't\"],\n    \"wouldn't've\": [\"would\", \"n't\", \"'ve\"],\n    \"y'all\": [\"y'\", \"all\"],\n    \"y'all'd\": [\"y'\", \"all\", \"'d\"],\n    \"y'all'd've\": [\"y'\",\"all\", \"'d\", \"'ve\"],\n    \"y'all're\": [ \"y'\", \"all\", \"'re'\"],\n    \"y'all've\": [ \"y'\", \"all\", \"ve\"],\n    \"you'd\": [\"you\", \"'d\"],\n    \"You'd\": [\"You\", \"'d\"],\n    \"you'd've\": [\"you\", \"'d\", \"'ve\"],\n    \"You'd've\": [\"You\", \"'d\", \"'ve\"],\n    \"you'll\": [\"you\", \"'ll\"],\n    \"You'll\": [\"You\", \"'ll\"],\n    \"you'll've\": [\"you\", \"'ll\", \"'ve\"],\n    \"You'll've\": [\"You\", \"'ll\", \"'ve\"],\n    \"you're\": [\"you\", \"'re\"],\n    \"You're\": [\"You\", \"'re\"],\n    \"you've\": [\"you\", \"'ve\"],\n    \"You've\": [\"You\", \"'ve\"]\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\nvar ABBRS = require( './abbreviations.json' );\nvar EMOJIS = require( './emojis.json' );\nvar CONTRACT = require( './contractions.json' );\n\n\n// VARIABLES //\n\nvar REGEXP_PREFIXES = /^([,([{*<\"\u201C'`\u2018]|\\.{1,3})/gi;\nvar REGEXP_SUFFIXES = /([,.!?%*>:;\"'\u201D`)\\]}]|\\.\\.\\.)$/gi;\n\n\n// FUNCTIONS //\n\n/**\n* Extends an array by the elements of another array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} ext - array to extend `arr` with\n* @returns {Array} mutated input array\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* var out = extend( arr, [ 4, 5 ] );\n* // returns [ 1, 2, 3, 4, 5 ]\n*/\nfunction extend( arr, ext ) {\n\tvar i;\n\tfor ( i = 0; i < ext.length; i++ ) {\n\t\tarr.push( ext[ i ] );\n\t}\n\treturn arr;\n}\n\n/**\n* Tokenizes a substring.\n*\n* @private\n* @param {string} substr - input string\n* @returns {Array} token array\n*\n* @example\n* var str = '(never)';\n* var out = tokenizeSubstring( str );\n* // returns [ '(', 'never', ')' ]\n*/\nfunction tokenizeSubstring( substr ) {\n\tvar prefixes = [];\n\tvar suffixes = [];\n\tvar match;\n\tvar done;\n\tvar res;\n\n\tdo {\n\t\tif (\n\t\t\t!EMOJIS[ substr ] &&\n\t\t\t!ABBRS[ substr ] &&\n\t\t\t!CONTRACT[ substr ]\n\t\t) {\n\t\t\tmatch = substr.split( REGEXP_PREFIXES );\n\t\t\tif ( match.length > 1 ) {\n\t\t\t\tprefixes.push( match[ 1 ] );\n\t\t\t\tsubstr = match[ 2 ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmatch = substr.split( REGEXP_SUFFIXES );\n\t\t\t\tif ( match.length > 1 ) {\n\t\t\t\t\tsubstr = match[ 0 ];\n\t\t\t\t\tsuffixes.unshift( match[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdone = true;\n\t\t}\n\t} while ( !done );\n\n\tres = prefixes;\n\tif ( substr ) {\n\t\tres.push( substr );\n\t}\n\n\t// If the last suffix is an ellipsis, move it to the front of the suffix array:\n\tif ( suffixes[ suffixes.length-1 ] === '...' ) {\n\t\tsuffixes.pop();\n\t\tsuffixes.unshift( '...' );\n\t}\n\textend( res, suffixes );\n\treturn res;\n}\n\n\n// MAIN //\n\n/**\n* Tokenize a string.\n*\n* @param {string} str - input string\n* @param {boolean} [keepWhitespace=false] - boolean indicating whether whitespace characters should be returned as part of the token array\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a boolean\n* @returns {Array} array of tokens\n*\n* @example\n* var str = 'Hello World!';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*\n* @example\n* var str = '';\n* var out = tokenize( str );\n* // returns []\n*\n* @example\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*/\nfunction tokenize( str, keepWhitespace ) {\n\tvar subtkns;\n\tvar substrs;\n\tvar tokens;\n\tvar substr;\n\tvar cache;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isBoolean( keepWhitespace ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a boolean. Value: `%s`.', keepWhitespace ) );\n\t\t}\n\t}\n\tif ( !str ) {\n\t\treturn [];\n\t}\n\n\t// Split on whitespace:\n\tif ( keepWhitespace ) {\n\t\tsubstrs = str.split( /(\\s+)/ );\n\t} else {\n\t\tsubstrs = str.split( /\\s+/ );\n\t}\n\n\t// Set up cache to hold tokens for substring matches:\n\tcache = {};\n\n\t// Initialize token array:\n\ttokens = [];\n\n\tfor ( i = 0; i < substrs.length; i++ ) {\n\t\tsubstr = substrs[ i ];\n\t\tif ( hasOwnProp( cache, substr ) ) {\n\t\t\textend( tokens, cache[ substr ] );\n\t\t}\n\t\telse {\n\t\t\tsubtkns = tokenizeSubstring( substr );\n\t\t\textend( tokens, subtkns );\n\t\t\tcache[ substr ] = subtkns;\n\t\t}\n\t}\n\treturn tokens;\n}\n\n\n// EXPORTS //\n\nmodule.exports = tokenize;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tokenize a string.\n*\n* @module @stdlib/nlp-tokenize\n*\n* @example\n* var tokenize = require( '@stdlib/nlp-tokenize' );\n*\n* var str = 'Hello Mrs. Maple, could you call me back?';\n* var out = tokenize( str );\n* // returns [ 'Hello', 'Mrs.', 'Maple', ',', 'could', 'you', 'call', 'me', 'back', '?' ]\n*\n* str = 'Hello World!';\n* out = tokenize( str );\n* // returns [ 'Hello', 'World', '!' ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,CAAAA,EAAA,SACI,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,SAAU,CAAC,QAAQ,EACnB,OAAQ,CAAC,MAAM,EACf,MAAO,CAAC,KAAK,EACb,UAAW,CAAC,SAAS,EACrB,SAAU,CAAC,QAAQ,EACnB,QAAS,CAAC,OAAO,EACjB,UAAW,CAAC,SAAS,EACrB,OAAQ,CAAC,MAAM,EACf,UAAW,CAAC,SAAS,EACrB,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAC,MAAM,EACf,UAAW,CAAC,SAAS,EACrB,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,MAAO,CAAC,KAAK,EACb,OAAO,CAAC,MAAM,EACd,MAAO,CAAC,KAAK,EACb,QAAS,CAAC,OAAO,EACjB,QAAS,CAAC,OAAO,EACjB,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,MAAO,CAAC,KAAK,EACb,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,SAAU,CAAC,QAAQ,EACnB,SAAU,CAAC,QAAQ,EACnB,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAE,MAAM,EAChB,SAAU,CAAC,QAAQ,EACnB,QAAS,CAAC,OAAO,EACjB,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAE,MAAM,EAChB,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAE,MAAM,EAChB,MAAO,CAAC,KAAK,EACb,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAC,MAAM,EACf,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,QAAS,CAAC,OAAO,EACjB,QAAS,CAAC,OAAO,EACjB,QAAS,CAAC,OAAO,EACjB,QAAS,CAAC,OAAO,EACjB,MAAO,CAAC,KAAK,EACb,QAAS,CAAC,OAAO,EACjB,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAE,MAAM,EAChB,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,OAAQ,CAAC,MAAM,EACf,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAC,MAAM,EACf,MAAO,CAAC,KAAK,EACb,QAAS,CAAC,OAAO,EACjB,MAAO,CAAC,KAAK,EACb,QAAS,CAAC,OAAO,EACjB,OAAQ,CAAC,MAAM,CACnB,ICvGA,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,CAAAA,EAAA,SACI,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,GAAM,CAAC,IAAI,EACX,IAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,KAAO,CAAC,IAAK,EACb,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,IAAO,CAAC,KAAK,EACb,OAAQ,CAAC,MAAM,EACf,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,MAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,IAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,OAAQ,CAAC,MAAM,EACf,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,QAAS,CAAC,OAAO,EACjB,KAAM,CAAC,IAAI,EACX,IAAO,CAAC,KAAK,EACb,MAAO,CAAC,KAAK,EACb,KAAM,CAAC,IAAI,CACf,IC5CA,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,CAAAA,EAAA,SACI,KAAM,CAAC,IAAI,EACX,KAAM,CAAC,IAAI,EACX,QAAS,CAAC,KAAM,KAAK,EACrB,KAAQ,CAAC,KAAM,IAAI,EACnB,QAAS,CAAC,KAAM,KAAK,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,MAAS,CAAC,MAAO,IAAI,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,QAAS,CAAC,KAAM,KAAK,EACrB,KAAQ,CAAC,KAAM,IAAI,EACnB,QAAS,CAAC,KAAM,KAAK,EACrB,WAAY,CAAC,KAAM,MAAO,KAAK,EAC/B,SAAU,CAAC,SAAS,EACpB,OAAU,CAAC,MAAO,KAAK,EACvB,OAAU,CAAC,MAAO,KAAK,EACvB,WAAY,CAAC,QAAS,KAAK,EAC3B,QAAW,CAAC,QAAS,IAAI,EACzB,WAAY,CAAC,QAAS,KAAK,EAC3B,WAAY,CAAC,QAAS,KAAK,EAC3B,QAAW,CAAC,QAAS,IAAI,EACzB,WAAY,CAAC,QAAS,KAAK,EAC3B,cAAe,CAAC,QAAS,MAAO,KAAK,EACrC,UAAa,CAAC,QAAS,KAAM,IAAI,EACjC,cAAe,CAAC,QAAS,MAAO,KAAK,EACrC,SAAU,CAAC,MAAO,KAAK,EACvB,MAAS,CAAC,MAAO,IAAI,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,UAAW,CAAC,OAAQ,KAAK,EACzB,OAAU,CAAC,OAAQ,IAAI,EACvB,UAAW,CAAC,OAAQ,KAAK,EACzB,QAAS,CAAC,KAAM,KAAK,EACrB,KAAQ,CAAC,KAAM,IAAI,EACnB,QAAS,CAAC,KAAM,KAAK,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,MAAS,CAAC,MAAO,IAAI,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,YAAa,CAAC,MAAO,MAAO,KAAK,EACjC,SAAU,CAAC,MAAO,KAAK,EACvB,MAAS,CAAC,MAAO,IAAI,EACrB,UAAW,CAAC,OAAQ,KAAK,EACzB,OAAU,CAAC,OAAQ,IAAI,EACvB,OAAQ,CAAC,KAAM,IAAI,EACnB,IAAO,CAAC,KAAM,GAAG,EACjB,UAAW,CAAC,KAAM,KAAM,KAAK,EAC7B,MAAS,CAAC,KAAM,IAAK,IAAI,EACzB,QAAS,CAAC,KAAM,KAAK,EACrB,WAAY,CAAC,KAAM,MAAO,KAAK,EAC/B,OAAQ,CAAC,KAAM,IAAI,EACnB,IAAO,CAAC,KAAM,GAAG,EACjB,QAAS,CAAC,MAAO,IAAI,EACrB,KAAQ,CAAC,MAAO,GAAG,EACnB,UAAW,CAAE,MAAO,KAAM,IAAK,EAC/B,SAAU,CAAC,MAAO,KAAK,EACvB,MAAS,CAAC,MAAO,IAAI,EACrB,QAAS,CAAC,MAAO,IAAI,EACrB,KAAQ,CAAC,MAAO,GAAG,EACnB,MAAO,CAAC,IAAK,IAAI,EACjB,SAAU,CAAC,IAAK,KAAM,KAAK,EAC3B,OAAQ,CAAC,IAAK,KAAK,EACnB,OAAQ,CAAC,IAAK,KAAK,EACnB,UAAW,CAAC,IAAK,MAAO,KAAK,EAC7B,UAAW,CAAC,IAAK,MAAO,KAAK,EAC7B,MAAO,CAAC,IAAK,IAAI,EACjB,MAAO,CAAC,IAAK,IAAI,EACjB,GAAM,CAAC,IAAK,GAAG,EACf,GAAM,CAAC,IAAK,GAAG,EACf,OAAQ,CAAC,IAAK,KAAK,EACnB,OAAQ,CAAC,IAAK,KAAK,EACnB,OAAQ,CAAC,IAAK,KAAK,EACnB,OAAQ,CAAC,IAAK,KAAK,EACnB,QAAS,CAAC,KAAM,KAAK,EACrB,KAAQ,CAAC,KAAM,IAAI,EACnB,QAAS,CAAC,KAAM,KAAK,EACrB,OAAQ,CAAC,KAAM,IAAI,EACnB,OAAQ,CAAC,KAAM,IAAI,EACnB,UAAW,CAAC,KAAM,KAAM,KAAK,EAC7B,WAAY,CAAC,KAAM,MAAO,KAAK,EAC/B,QAAS,CAAC,KAAM,KAAK,EACrB,KAAQ,CAAC,KAAM,IAAI,EACnB,OAAQ,CAAC,KAAM,IAAI,EACnB,QAAS,CAAC,MAAO,IAAI,EACrB,KAAQ,CAAC,MAAO,GAAG,EACnB,QAAS,CAAC,OAAO,EACjB,SAAU,CAAC,MAAO,KAAK,EACvB,WAAY,CAAC,QAAS,KAAK,EAC3B,cAAe,CAAC,QAAS,MAAO,KAAK,EACrC,WAAY,CAAC,QAAS,KAAK,EAC3B,UAAW,CAAC,OAAQ,KAAK,EACzB,aAAc,CAAC,OAAQ,MAAM,KAAK,EAClC,UAAW,CAAC,OAAQ,KAAK,EACzB,UAAW,CAAC,OAAQ,KAAK,EACzB,aAAc,CAAC,OAAQ,MAAO,KAAK,EACnC,SAAU,CAAC,MAAO,KAAK,EACvB,UAAW,CAAC,SAAS,EACrB,WAAY,CAAC,QAAS,KAAK,EAC3B,cAAe,CAAC,QAAS,MAAO,KAAK,EACrC,QAAS,CAAC,KAAM,KAAK,EACrB,OAAQ,CAAC,KAAM,IAAI,EACnB,SAAU,CAAC,MAAO,KAAK,EACvB,UAAW,CAAC,OAAQ,KAAK,EACzB,YAAa,CAAC,MAAO,MAAO,KAAK,EACjC,QAAS,CAAC,MAAO,IAAI,EACrB,WAAY,CAAC,MAAO,KAAM,KAAK,EAC/B,SAAU,CAAC,MAAO,KAAK,EACvB,YAAa,CAAC,MAAO,MAAO,KAAK,EACjC,QAAS,CAAC,MAAO,IAAI,EACrB,YAAa,CAAC,SAAU,KAAK,EAC7B,YAAa,CAAC,SAAU,KAAK,EAC7B,eAAgB,CAAC,SAAU,MAAO,KAAK,EACvC,SAAU,CAAC,OAAQ,IAAI,EACvB,YAAa,CAAC,OAAQ,KAAM,KAAK,EACjC,SAAU,CAAC,OAAQ,IAAI,EACvB,MAAS,CAAC,OAAQ,GAAG,EACrB,UAAW,CAAC,QAAS,IAAI,EACzB,aAAc,CAAC,QAAS,KAAM,KAAK,EACnC,UAAW,CAAC,QAAS,IAAI,EACzB,SAAU,CAAC,OAAQ,IAAI,EACvB,SAAU,CAAC,OAAQ,IAAI,EACvB,YAAa,CAAC,OAAQ,KAAM,KAAK,EACjC,YAAa,CAAC,OAAQ,KAAM,KAAK,EACjC,UAAW,CAAC,OAAQ,KAAK,EACzB,UAAW,CAAC,OAAQ,KAAK,EACzB,aAAc,CAAC,OAAQ,MAAO,KAAK,EACnC,aAAc,CAAC,OAAQ,MAAO,KAAK,EACnC,UAAW,CAAC,OAAQ,KAAK,EACzB,UAAW,CAAC,OAAQ,KAAK,EACzB,UAAW,CAAC,OAAQ,KAAK,EACzB,UAAW,CAAC,OAAQ,KAAK,EACzB,QAAS,CAAC,KAAM,KAAK,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,OAAQ,CAAC,KAAM,IAAI,EACnB,OAAQ,CAAC,KAAM,IAAI,EACnB,UAAW,CAAC,KAAM,KAAM,KAAK,EAC7B,QAAS,CAAC,KAAM,KAAK,EACrB,QAAS,CAAC,KAAM,KAAK,EACrB,WAAY,CAAC,KAAM,MAAO,KAAK,EAC/B,WAAY,CAAC,KAAM,MAAO,KAAK,EAC/B,QAAS,CAAC,KAAM,KAAK,EACrB,QAAS,CAAC,KAAM,KAAK,EACrB,QAAS,CAAC,KAAM,KAAK,EACrB,QAAS,CAAC,KAAM,KAAK,EACrB,UAAW,CAAC,OAAQ,KAAK,EACzB,UAAW,CAAC,OAAQ,KAAK,EACzB,aAAc,CAAC,OAAQ,MAAO,KAAK,EACnC,UAAW,CAAC,OAAQ,KAAK,EACzB,SAAU,CAAC,OAAQ,IAAI,EACvB,UAAW,CAAC,OAAQ,KAAK,EACzB,SAAU,CAAC,OAAQ,IAAI,EACvB,UAAW,CAAC,OAAQ,KAAK,EACzB,UAAW,CAAC,QAAS,IAAI,EACzB,UAAW,CAAC,QAAS,IAAI,EACzB,WAAY,CAAC,QAAS,KAAK,EAC3B,QAAS,CAAC,MAAO,IAAI,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,YAAa,CAAC,MAAO,OAAQ,MAAM,EACnC,SAAU,CAAC,MAAO,KAAK,EACvB,QAAS,CAAC,MAAO,IAAI,EACrB,SAAU,CAAC,MAAO,KAAK,EACvB,SAAU,CAAC,MAAO,KAAK,EACvB,SAAU,CAAC,MAAO,KAAK,EACvB,SAAU,CAAC,MAAO,KAAK,EACvB,QAAS,CAAC,MAAO,IAAI,EACrB,UAAW,CAAC,OAAQ,KAAK,EACzB,QAAS,CAAC,KAAM,KAAK,EACrB,KAAQ,CAAC,KAAM,IAAI,EACnB,WAAY,CAAC,KAAM,MAAO,KAAK,EAC/B,WAAY,CAAC,QAAS,KAAK,EAC3B,WAAY,CAAC,QAAS,KAAK,EAC3B,cAAe,CAAC,QAAS,MAAO,KAAK,EACrC,QAAS,CAAC,KAAM,KAAK,EACrB,UAAW,CAAC,KAAM,MAAO,IAAI,EAC7B,aAAc,CAAC,KAAK,MAAO,KAAM,KAAK,EACtC,WAAY,CAAE,KAAM,MAAO,MAAM,EACjC,WAAY,CAAE,KAAM,MAAO,IAAI,EAC/B,QAAS,CAAC,MAAO,IAAI,EACrB,QAAS,CAAC,MAAO,IAAI,EACrB,WAAY,CAAC,MAAO,KAAM,KAAK,EAC/B,WAAY,CAAC,MAAO,KAAM,KAAK,EAC/B,SAAU,CAAC,MAAO,KAAK,EACvB,SAAU,CAAC,MAAO,KAAK,EACvB,YAAa,CAAC,MAAO,MAAO,KAAK,EACjC,YAAa,CAAC,MAAO,MAAO,KAAK,EACjC,SAAU,CAAC,MAAO,KAAK,EACvB,SAAU,CAAC,MAAO,KAAK,EACvB,SAAU,CAAC,MAAO,KAAK,EACvB,SAAU,CAAC,MAAO,KAAK,CAC3B,IC3LA,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAa,QAAS,iCAAkC,EACxDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAQ,IACRC,EAAS,IACTC,EAAW,IAKXC,EAAkB,6BAClBC,EAAkB,kCAkBtB,SAASC,EAAQC,EAAKC,EAAM,CAC3B,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAID,EAAI,OAAQC,IAC5BF,EAAI,KAAMC,EAAKC,CAAE,CAAE,EAEpB,OAAOF,CACR,CAcA,SAASG,EAAmBC,EAAS,CACpC,IAAIC,EAAW,CAAC,EACZC,EAAW,CAAC,EACZC,EACAC,EACAC,EAEJ,EAEE,CAACd,EAAQS,CAAO,GAChB,CAACV,EAAOU,CAAO,GACf,CAACR,EAAUQ,CAAO,GAElBG,EAAQH,EAAO,MAAOP,CAAgB,EACjCU,EAAM,OAAS,GACnBF,EAAS,KAAME,EAAO,CAAE,CAAE,EAC1BH,EAASG,EAAO,CAAE,IAGlBA,EAAQH,EAAO,MAAON,CAAgB,EACjCS,EAAM,OAAS,GACnBH,EAASG,EAAO,CAAE,EAClBD,EAAS,QAASC,EAAO,CAAE,CAAE,GAE7BC,EAAO,KAKTA,EAAO,SAEC,CAACA,GAEX,OAAAC,EAAMJ,EACDD,GACJK,EAAI,KAAML,CAAO,EAIbE,EAAUA,EAAS,OAAO,CAAE,IAAM,QACtCA,EAAS,IAAI,EACbA,EAAS,QAAS,KAAM,GAEzBP,EAAQU,EAAKH,CAAS,EACfG,CACR,CA6BA,SAASC,EAAUC,EAAKC,EAAiB,CACxC,IAAIC,EACAC,EACAC,EACAX,EACAY,EACAd,EACJ,GAAK,CAACX,EAAUoB,CAAI,EACnB,MAAM,IAAI,UAAWlB,EAAQ,kEAAmEkB,CAAI,CAAE,EAEvG,GAAK,UAAU,OAAS,GAClB,CAACrB,EAAWsB,CAAe,EAC/B,MAAM,IAAI,UAAWnB,EAAQ,oEAAqEmB,CAAe,CAAE,EAGrH,GAAK,CAACD,EACL,MAAO,CAAC,EAgBT,IAZKC,EACJE,EAAUH,EAAI,MAAO,OAAQ,EAE7BG,EAAUH,EAAI,MAAO,KAAM,EAI5BK,EAAQ,CAAC,EAGTD,EAAS,CAAC,EAEJb,EAAI,EAAGA,EAAIY,EAAQ,OAAQZ,IAChCE,EAASU,EAASZ,CAAE,EACfV,EAAYwB,EAAOZ,CAAO,EAC9BL,EAAQgB,EAAQC,EAAOZ,CAAO,CAAE,GAGhCS,EAAUV,EAAmBC,CAAO,EACpCL,EAAQgB,EAAQF,CAAQ,EACxBG,EAAOZ,CAAO,EAAIS,GAGpB,OAAOE,CACR,CAKA1B,EAAO,QAAUqB,IC5JjB,IAAIO,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_abbreviations", "__commonJSMin", "exports", "module", "require_emojis", "__commonJSMin", "exports", "module", "require_contractions", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "isBoolean", "isString", "hasOwnProp", "format", "ABBRS", "EMOJIS", "CONTRACT", "REGEXP_PREFIXES", "REGEXP_SUFFIXES", "extend", "arr", "ext", "i", "tokenizeSubstring", "substr", "prefixes", "suffixes", "match", "done", "res", "tokenize", "str", "keepWhitespace", "subtkns", "substrs", "tokens", "cache", "main"]
}
